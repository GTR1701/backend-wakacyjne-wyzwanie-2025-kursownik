// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String @id @default(cuid())
  email    String @unique
  password String
  roles    String

  UserCourses UserCourses[]
}

model UserCourses {
  id             String @id @default(cuid())
  userId         String
  courseId       String
  activeLessonId String
  isPremium      Boolean @default(false)

  user         User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  course       Course @relation(fields: [courseId], references: [id], onDelete: Cascade)
  activeLesson Lesson @relation(fields: [activeLessonId], references: [id],onDelete: Cascade) 
}

model Course {
  id          String @id @default(cuid())
  name        String
  description String
  imageSrc    String

  UserCourses UserCourses[]
  Chapter     Chapter[]
}

model Chapter {
  id          String @id @default(cuid())
  name        String
  description String
  courseId    String
  chapterOrder Int @default(0)  

  course Course @relation(fields: [courseId], references: [id])

  Lesson Lesson[]
}

model Lesson {
  id          String @id @default(cuid())
  name        String
  description String
  chapterId   String
  lessonOrder Int

  chapter Chapter @relation(fields: [chapterId], references: [id])

  UserCourses UserCourses[]
}
